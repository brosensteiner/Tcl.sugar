<?xml version="1.0" encoding="UTF-8"?>
<!--
@description Defines the Tcl code sense providers
@author 	 Bernhard Rosensteiner <brosensteiner@gmail.com>
@copyright 	 The MIT License

Copyright (c) 2012 Bernhard Rosensteiner

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
-->

<!--when you want to make useful code suggestions to user you have to go crazy in Tcl :)
this code completion scheme works well for all options but can make apperring a suggestion for switches more often than allowed in real tcl syntax, but when needed switches code completion is always there and when not, most of the time out of the way. This is due the fact that i donÂ´t catch switches specifically, only procedures and options - which would be to much useless work-->

<codesense>
    
	<provider>
 		<selector>tcl, tcl *:not(tcl.builtinfunc,tcl.builtinfunc + s + tcl.options,tcl.builtinfunc + s + tcl.options + s + options,tcl.switches,tcl.control) + s + * + *</selector>
 		<completions>com.rosensteiner.Tcl.functions</completions>
 		<completions>com.rosensteiner.Tcl.math</completions>
 		<completions>com.rosensteiner.Tcl.global-variables</completions>
 		<completions>com.rosensteiner.Tcl.global-procedures</completions>
 		<complete-match>(?&lt;!\\|_)[a-zA-Z_]+</complete-match>
	</provider>
	<provider>
			<selector>tcl, tcl *:not(tcl.builtinfunc,tcl.builtinfunc + s + tcl.options,tcl.builtinfunc + s + tcl.options + s + options,tcl.switches,tcl.control) + s + * + *</selector>
			<completions>com.rosensteiner.Tcl.other-things</completions>
			<complete-match>(?&lt;=-)[a-zA-Z_]+</complete-match>
	</provider>
	
	<!--proc option name switch-->
	<provider>
		<selector>tcl builtinfunc:capture(name) + s + *:capture(options) + s + variable + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options}</completions>
		<complete-match>-?[a-zA-Z0-9-]*</complete-match>
	</provider>
	<!--proc option name switch switch-->
	<provider>
		<selector>tcl builtinfunc:capture(name) + s + *:capture(options) + s + variable + s + switches + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options}</completions>
		<complete-match>-?[a-zA-Z0-9-]*</complete-match>
	</provider>
	<!--proc option name switch switch switch-->
	<provider>
		<selector>tcl builtinfunc:capture(name) + s + *:capture(options) + s + variable + s + switches + s + switches + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options}</completions>
		<complete-match>-?[a-zA-Z0-9-]*</complete-match>
	</provider>
	<!--proc option name switch switch switch switch-->
	<provider>
		<selector>tcl builtinfunc:capture(name) + s + *:capture(options) + s + variable + s + switches + s + switches + s + switches + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options}</completions>
		<complete-match>-?[a-zA-Z0-9-]*</complete-match>
	</provider>
	<!--proc option name switch switch switch switch switch-->
	<provider>
		<selector>tcl builtinfunc:capture(name) + s + *:capture(options) + s + variable + s + switches + s + switches + s + switches + s + switches + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options}</completions>
		<complete-match>-?[a-zA-Z0-9-]*</complete-match>
	</provider>
	<!--proc option name switch switch switch switch switch switch-->
	<provider>
		<selector>tcl builtinfunc:capture(name) + s + *:capture(options) + s + variable + s + switches + s + switches + s + switches + s + switches + s + switches + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options}</completions>
		<complete-match>-?[a-zA-Z0-9-]*</complete-match>
	</provider>
	<!--proc option name switch switch switch switch switch switch switch-->
	<provider>
		<selector>tcl builtinfunc:capture(name) + s + *:capture(options) + s + variable + s + switches + s + switches + s + switches + s + switches + s + switches + s + switches + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options}</completions>
		<complete-match>-?[a-zA-Z0-9-]*</complete-match>
	</provider>
	<!--proc option name switch switch switch switch switch switch switch switch-->
	<provider>
		<selector>tcl builtinfunc:capture(name) + s + *:capture(options) + s + variable + s + switches + s + switches + s + switches + s + switches + s + switches + s + switches + s + switches + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options}</completions>
		<complete-match>-?[a-zA-Z0-9-]*</complete-match>
	</provider>
	<!--proc option name switch switch switch switch switch switch switch switch switch-->
	<provider>
		<selector>tcl builtinfunc:capture(name) + s + *:capture(options) + s + variable + s + switches + s + switches + s + switches + s + switches + s + switches + s + switches + s + switches + s + switches + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options}</completions>
		<complete-match>-?[a-zA-Z0-9-]*</complete-match>
	</provider>
	<!--proc option name switch switch switch switch switch switch switch switch switch switch-->
	<provider>
		<selector>tcl builtinfunc:capture(name) + s + *:capture(options) + s + variable + s + switches + s + switches + s + switches + s + switches + s + switches + s + switches + s + switches + s + switches + s + switches + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options}</completions>
		<complete-match>-?[a-zA-Z0-9-]*</complete-match>
	</provider>
	<!--proc option name switch switch switch switch switch switch switch switch switchs switch switch-->
	<provider>
		<selector>tcl builtinfunc:capture(name) + s + *:capture(options) + s + variable + s + switches + s + switches + s + switches + s + switches + s + switches + s + switches + s + switches + s + switches + s + switches + s + switches + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options}</completions>
		<complete-match>-?[a-zA-Z0-9-]*</complete-match>
	</provider>
	
	<!--proc option && proc switch-->
	<provider>
		<selector>tcl builtinfunc:capture(name) + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}</completions>
		<complete-match>-?[a-zA-Z]*</complete-match>
	</provider>
	<!--proc option option-->
	<provider>
		<selector>tcl builtinfunc:capture(name) + s + *:capture(options) + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options}</completions>
		<complete-match>[a-zA-Z-]*</complete-match>
	</provider>
	<!--proc option switch-->
	<provider>
		<selector>tcl builtinfunc:capture(name) + s + *:capture(options) + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options}</completions>
		<complete-match>-[a-zA-Z-]*</complete-match>
	</provider>
	<!--proc option switch option && proc option switch switch-->
	<provider>
		<selector>tcl builtinfunc:capture(name) + s + *:capture(options) + s + * + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options}</completions>
		<complete-match>-?[a-zA-Z-]*</complete-match>
	</provider>
	<!--proc option option switch-->
	<provider>
		<selector>tcl builtinfunc:capture(name) + s + *:capture(options1) + s + *:capture(options2) + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options1}.${options2}</completions>
		<complete-match>-[a-zA-Z0-9-]*</complete-match>
	</provider>
	<!--proc option option switch switch && proc option option name option-->
	<provider>
		<selector>tcl builtinfunc:capture(name) + s + *:capture(options1) + s + *:capture(options2) + s + * + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options1}.${options2}</completions>
		<complete-match>-?[a-zA-Z0-9-]*</complete-match>
	</provider>
	<!--proc option option switch switch switch && proc option option name option option-->
	<provider>
		<selector>tcl builtinfunc:capture(name) + s + *:capture(options1) + s + *:capture(options2) + s + * + s + * + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options1}.${options2}</completions>
		<complete-match>-?[a-zA-Z0-9-]*</complete-match>
	</provider>
	<!--proc option option name option option option-->
	<provider>
		<selector>tcl builtinfunc:capture(name) + s + *:capture(options1) + s + *:capture(options2) + s + * + s + * + s + * + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options1}.${options2}</completions>
		<complete-match>[a-zA-Z0-9-]*</complete-match>
	</provider>
	<!--proc option option name option option option options-->
	<provider>
		<selector>tcl builtinfunc:capture(name) + s + *:capture(options1) + s + *:capture(options2) + s + * + s + * + s + * + s + * + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options1}.${options2}</completions>
		<complete-match>[a-zA-Z0-9-]*</complete-match>
	</provider>
	<!--proc option char-class switch switch-->
	<provider>
		<selector>tcl builtinfunc:capture(name) + s + *:capture(options) + s + char-class + s + switches + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options}</completions>
		<complete-match>-?[a-zA-Z0-9-]*</complete-match>
	</provider>
	<!--proc switch switch switch switch switch switch switch switch-->
	<provider>
		<selector>tcl builtinfunc:capture(name) + s + switches + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}</completions>
		<complete-match>-?[a-zA-Z0-9-]*</complete-match>
	</provider>
	<provider>
		<selector>tcl builtinfunc:capture(name) + s + switches + s + switches + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}</completions>
		<complete-match>-?[a-zA-Z0-9-]*</complete-match>
	</provider>
	<provider>
		<selector>tcl builtinfunc:capture(name) + s + switches + s + switches + s + switches + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}</completions>
		<complete-match>-?[a-zA-Z0-9-]*</complete-match>
	</provider>
	<provider>
		<selector>tcl builtinfunc:capture(name) + s + switches + s + switches + s + switches + s + switches + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}</completions>
		<complete-match>-?[a-zA-Z0-9-]*</complete-match>
	</provider>
	<provider>
		<selector>tcl builtinfunc:capture(name) + s + switches + s + switches + s + switches + s + switches + s + switches + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}</completions>
		<complete-match>-?[a-zA-Z0-9-]*</complete-match>
	</provider>
	<provider>
		<selector>tcl builtinfunc:capture(name) + s + switches + s + switches + s + switches + s + switches + s + switches + s + switches + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}</completions>
		<complete-match>-?[a-zA-Z0-9-]*</complete-match>
	</provider>
	<provider>
		<selector>tcl builtinfunc:capture(name) + s + switches + s + switches + s + switches + s + switches + s + switches + s + switches + s + switches + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}</completions>
		<complete-match>-?[a-zA-Z0-9-]*</complete-match>
	</provider>
	<provider>
		<selector>tcl builtinfunc:capture(name) + s + switches + s + switches + s + switches + s + switches + s + switches + s + switches + s + switches + s + switches + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}</completions>
		<complete-match>-?[a-zA-Z0-9-]*</complete-match>
	</provider>
	<provider>
		<selector>tcl builtinfunc:capture(name) + s + switches + s + switches + s + switches + s + switches + s + switches + s + s + switches + s + switches + s + switches + s + switches + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}</completions>
		<complete-match>-?[a-zA-Z0-9-]*</complete-match>
	</provider>	

</codesense> 