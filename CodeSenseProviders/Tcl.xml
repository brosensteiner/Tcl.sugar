<?xml version="1.0" encoding="UTF-8"?>
<!--
@description Defines the Tcl code sense providers
@author 	 Bernhard Rosensteiner <brosensteiner@gmail.com>
@copyright 	 The MIT License

Copyright (c) 2012 Bernhard Rosensteiner

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
-->

<!-- code completion in Tcl is not trivial! switches (-exampleswitch) will be suggested based on the procedure or sometimes also combined with options before it (most general approach), so it can happen that there is a suggestion when one types "-" which sould not be there. Anyway the suggestions correspond to the procedure before it -->

<codesense>

    <provider>
     	<selector>tcl, tcl *</selector>
     	<completions>com.rosensteiner.Tcl.functions-with-option</completions>
     	<complete-match>(?&lt;!\\|_|-|\$)\b(package|namespace|prefix|dict|array|http|binary|history|info|string|file|chan|trace|after) [a-zA-Z]*</complete-match>
    </provider>
    
	<provider>
	 	<selector>tcl, tcl *</selector>
	 	<completions>com.rosensteiner.Tcl.functions</completions>
	 	<complete-match>(?&lt;!\\|_|-|package |namespace |prefix |dict |array |http |binary |history |info |string |file |chan |trace |ensemble|after )\b[a-zA-Z]*</complete-match>
	</provider>
	
	<provider>
	 	<selector>tcl *</selector>
	 	<completions>com.rosensteiner.Tcl.mathfunc</completions>
	 	<completions>com.rosensteiner.Tcl.global-variables</completions>
	 	<completions>com.rosensteiner.Tcl.global-procedures</completions>
	 	<complete-match>(?&lt;!\\|_|-|package |namespace |prefix |dict |array |http |binary |history |info |string |file |chan |trace |ensemble|after )\b[a-zA-Z]*</complete-match>
	</provider>
	
	<!--proc option name option-->
	<provider>
		<selector>tcl function-call:capture(name) + s + options:capture(options) + s + * + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options}</completions>
		<complete-match>(?&lt;!\\|_|-|package |namespace |prefix |dict |array |http |binary |history |info |string |file |chan |trace |ensemble|after )\b[a-zA-Z]*</complete-match>
	</provider>
	<!--proc option name nummeric option (chan seek)-->
	<provider>
		<selector>tcl function-call:capture(name) + s + options:capture(options) + s + * + s + numeric + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options}</completions>
		<complete-match>(?&lt;!\\|_|-|package |namespace |prefix |dict |array |http |binary |history |info |string |file |chan |trace |ensemble|after )\b[a-zA-Z]*</complete-match>
	</provider>
	<!--proc name option (fileevent)-->
	<provider>
		<selector>tcl function-call:capture(name) + s + * + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}</completions>
		<complete-match>(?&lt;!\\|_|-|package |namespace |prefix |dict |array |http |binary |history |info |string |file |chan |trace |ensemble|after )\b[a-zA-Z]*</complete-match>
	</provider>
	<!--proc name nummeric option (seek)-->
	<provider>
		<selector>tcl function-call:capture(name) + s + * + s + numeric + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}</completions>
		<complete-match>(?&lt;!\\|_|-|package |namespace |prefix |dict |array |http |binary |history |info |string |file |chan |trace |ensemble|after )\b[a-zA-Z]*</complete-match>
	</provider>
	<!--proc name name switch-->
	<provider>
		<selector>tcl function-call:capture(name) + s + * + s + * + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}</completions>
		<complete-match>-[a-zA-Z0-9-]*</complete-match>
	</provider>
	<!--proc name name switch name switch-->
	<provider>
		<selector>tcl function-call:capture(name) + s + * + s + * + s + property-name + s + * + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}</completions>
		<complete-match>-[a-zA-Z0-9-]*</complete-match>
	</provider>
	
	<!--proc option name switch-->
	<provider>
		<selector>tcl function-call:capture(name) + s + options:capture(options) + s + * + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options}</completions>
		<complete-match>-[a-zA-Z0-9-]*</complete-match>
	</provider>
	<!--proc option name name switch (e.g. chan copy)/proc option name switch switch-->
	<provider>
		<selector>tcl function-call:capture(name) + s + options:capture(options) + s + * + s + * + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options}</completions>
		<complete-match>-[a-zA-Z0-9-]*</complete-match>
	</provider>
	<!--proc option name name switch name switch (e.g. chan copy)-->
	<provider>
		<selector>tcl function-call:capture(name) + s + options:capture(options) + s + * + s + * + s + property-name + s + * + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options}</completions>
		<complete-match>-[a-zA-Z0-9-]*</complete-match>
	</provider>
	<!--proc option name switch switch switch-->
	<provider>
		<selector>tcl function-call:capture(name) + s + options:capture(options) + s + * + s + property-name + s + property-name + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options}</completions>
		<complete-match>-[a-zA-Z0-9-]*</complete-match>
	</provider>
	
	<!--proc option name switch name switch-->
	<provider>
		<selector>tcl function-call:capture(name) + s + options:capture(options) + s + * + s + property-name + s + * + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options}</completions>
		<complete-match>-[a-zA-Z0-9-]*</complete-match>
	</provider>
	<!--proc option name switch name switch name switch-->
	<provider>
		<selector>tcl function-call:capture(name) + s + options:capture(options) + s + * + s + property-name + s + * + s + property-name + s + * + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options}</completions>
		<complete-match>-[a-zA-Z0-9-]*</complete-match>
	</provider>
	<!--proc option name switch name switch name switch name switch-->
	<provider>
		<selector>tcl function-call:capture(name) + s + options:capture(options) + s + * + s + property-name + s + * + s + property-name + s + * + s + property-name + s + * + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options}</completions>
		<complete-match>-[a-zA-Z0-9-]*</complete-match>
	</provider>
	<!--proc option name switch name switch name switch name switch name switch-->
	<provider>
		<selector>tcl function-call:capture(name) + s + options:capture(options) + s + * + s + property-name + s + * + s + property-name + s + * + s + property-name + s + * + s + property-name + s + * + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options}</completions>
		<complete-match>-[a-zA-Z0-9-]*</complete-match>
	</provider>
	
	
	<!--proc option switch-->
	<provider>
		<selector>tcl function-call:capture(name) + s + options:capture(options) + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options}</completions>
		<complete-match>-[a-zA-Z-]*</complete-match>
	</provider>
	<!--proc option switch switch-->
	<provider>
		<selector>tcl function-call:capture(name) + s + options:capture(options) + s + property-name + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options}</completions>
		<complete-match>-[a-zA-Z-]*</complete-match>
	</provider>
	<!--proc option switch switch switch-->
	<provider>
		<selector>tcl function-call:capture(name) + s + options:capture(options) + s + property-name + s + property-name + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options}</completions>
		<complete-match>-[a-zA-Z-]*</complete-match>
	</provider>
	
	<!--proc option option-->
	<provider>
		<selector>tcl function-call:capture(name) + s + options:capture(options) + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options}</completions>
		<complete-match>(?&lt;!\\|_|-|package |namespace |prefix |dict |http |binary |history |info |string |file |chan |trace )[a-zA-Z-]*</complete-match>
	</provider>
	
	<!--proc option option switch-->
	<provider>
		<selector>tcl function-call:capture(name) + s + options:capture(options1) + s + options:capture(options2) + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options1}.${options2}</completions>
		<complete-match>-[a-zA-Z-]*</complete-match>
	</provider>
	<!--proc option option switch switch -->
	<provider>
		<selector>tcl function-call:capture(name) + s + options:capture(options1) + s + options:capture(options2) + s + property-name + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options1}.${options2}</completions>
		<complete-match>-[a-zA-Z-]*</complete-match>
	</provider>
	<!--proc option option switch switch switch-->
	<provider>
		<selector>tcl function-call:capture(name) + s + options:capture(options1) + s + options:capture(options2) + s + property-name + s + property-name + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options1}.${options2}</completions>
		<complete-match>-[a-zA-Z-]*</complete-match>
	</provider>
	<!--proc option option switch switch switch switch-->
	<provider>
		<selector>tcl function-call:capture(name) + s + options:capture(options1) + s + options:capture(options2) + s + property-name + s + property-name + s + property-name + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options1}.${options2}</completions>
		<complete-match>-[a-zA-Z-]*</complete-match>
	</provider>
	<!--proc option option switch switch switch switch switch-->
	<provider>
		<selector>tcl function-call:capture(name) + s + options:capture(options1) + s + options:capture(options2) + s + property-name + s + property-name + s + property-name + s + property-name + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}.${options1}.${options2}</completions>
		<complete-match>-[a-zA-Z-]*</complete-match>
	</provider>
	
	<!--proc name switch switch switch switch switch switch switch (e.g. fconfigure)-->
	<provider>
		<selector>tcl function-call:capture(name) + s + * + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}</completions>
		<complete-match>-[a-zA-Z0-9-]*</complete-match>
	</provider>
	<provider>
		<selector>tcl function-call:capture(name) + s + * + s + property-name + s + * + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}</completions>
		<complete-match>-[a-zA-Z0-9-]*</complete-match>
	</provider>
	<provider>
		<selector>tcl function-call:capture(name) + s + * + s + property-name + s + * + s + property-name + s + * + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}</completions>
		<complete-match>-[a-zA-Z0-9-]*</complete-match>
	</provider>
	<provider>
		<selector>tcl function-call:capture(name) + s + * + s + property-name + s + * + s + property-name + s + * + s + property-name + s + * + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}</completions>
		<complete-match>-[a-zA-Z0-9-]*</complete-match>
	</provider>
	<provider>
		<selector>tcl function-call:capture(name) + s + * + s + property-name + s + * + s + property-name + s + * + s + property-name + s + * + s + property-name + s + * + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}</completions>
		<complete-match>-[a-zA-Z0-9-]*</complete-match>
	</provider>
	<provider>
		<selector>tcl function-call:capture(name) + s + * + s + property-name + s + * + s + property-name + s + * + s + property-name + s + * + s + property-name + s + * + s + property-name + s + * + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}</completions>
		<complete-match>-[a-zA-Z0-9-]*</complete-match>
	</provider>
	
	<!--proc switch switch switch switch switch switch switch switch switch-->
	<!--tcl-keyword here because of -regexp switch (syntax highlighting)-->
	<provider>
		<selector>tcl function-call:capture(name) + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}</completions>
		<complete-match>-[a-zA-Z0-9-]*</complete-match>
	</provider>
	<provider>
		<selector>tcl function-call:capture(name) + s + tcl-keyword + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}</completions>
		<complete-match>-[a-zA-Z0-9-]*</complete-match>
	</provider>
	<provider>
		<selector>tcl function-call:capture(name) + s + tcl-keyword + s + tcl-keyword + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}</completions>
		<complete-match>-[a-zA-Z0-9-]*</complete-match>
	</provider>
	<provider>
		<selector>tcl function-call:capture(name) + s + tcl-keyword + s + tcl-keyword + s + tcl-keyword + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}</completions>
		<complete-match>-[a-zA-Z0-9-]*</complete-match>
	</provider>
	<provider>
		<selector>tcl function-call:capture(name) + s + tcl-keyword + s + tcl-keyword + s + tcl-keyword + s + tcl-keyword + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}</completions>
		<complete-match>-[a-zA-Z0-9-]*</complete-match>
	</provider>
	<provider>
		<selector>tcl function-call:capture(name) + s + tcl-keyword + s + tcl-keyword + s + tcl-keyword + s + tcl-keyword + s + tcl-keyword + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}</completions>
		<complete-match>-[a-zA-Z0-9-]*</complete-match>
	</provider>
	<provider>
		<selector>tcl function-call:capture(name) + s + tcl-keyword + s + tcl-keyword + s + tcl-keyword + s + tcl-keyword + s + tcl-keyword + s + tcl-keyword + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}</completions>
		<complete-match>-[a-zA-Z0-9-]*</complete-match>
	</provider>
	<provider>
		<selector>tcl function-call:capture(name) + s + tcl-keyword + s + tcl-keyword + s + tcl-keyword + s + tcl-keyword + s + tcl-keyword + s + tcl-keyword + s + tcl-keyword + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}</completions>
		<complete-match>-[a-zA-Z0-9-]*</complete-match>
	</provider>
	<provider>
		<selector>tcl function-call:capture(name) + s + tcl-keyword + s + tcl-keyword + s + tcl-keyword + s + tcl-keyword + s + tcl-keyword + s + tcl-keyword + s + tcl-keyword + s + tcl-keyword + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}</completions>
		<complete-match>-[a-zA-Z0-9-]*</complete-match>
	</provider>
	<provider>
		<selector>tcl function-call:capture(name) + s + tcl-keyword + s + tcl-keyword + s + tcl-keyword + s + tcl-keyword + s + tcl-keyword + s + s + tcl-keyword + s + tcl-keyword + s + tcl-keyword + s + tcl-keyword + s + * + *</selector>
		<completions>com.rosensteiner.Tcl.function.${name}</completions>
		<complete-match>-[a-zA-Z0-9-]*</complete-match>
	</provider>
	
	
</codesense> 