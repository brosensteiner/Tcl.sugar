/*
    @theme Tcl Placeholder
    @placeholder language-root.tcl
    @author Bernhard Rosensteiner <brosensteiner@gmail.com>
    has some Amira hacks - delete Amira selector if needed
*/
:not(tcl.comment, tcl.string) {
	spell-check: disabled;
}

tcl.shebang {
	color: #d44950;
	font-weight: bold;
	background-color: rgba(57, 79, 227, 0.3);
}

tcl.open-brace,
tcl.close-brace,
tcl.open-parenthesis,
tcl.close-parenthesis {
	color: #7f7f7f;
}

tcl.global-variables,
tcl.global-procedures {
	font-weight: bold;
}

**********Amira**********,
:not(tcl.options) + s + :not(keyword) + s + tcl.keyword.options.trace,
amira.variable,
amira.keyword {
	color: #4f76cf;
	font-weight: bold;
}

tcl.variable.substitute {
	color: rgba(163, 214, 132, 0.8);
}

tcl.set-variable,
tcl.set-variable.substitute.rest,
tcl.function-call[text='set'] + s + :not(keyword),

tcl.function-call[text='append'] + s + word,

tcl.function-call[text='scan'] + s + :not(keyword) + s + :not(keyword) + s + :not(keyword),
tcl.function-call[text='scan'] + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword),
tcl.function-call[text='scan'] + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword),
tcl.function-call[text='scan'] + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword),
tcl.function-call[text='scan'] + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword),

tcl.function-call[text='lassign'] + s + * + s + :not(keyword),
tcl.function-call[text='lassign'] + s + * + s + :not(keyword) + s + :not(keyword),
tcl.function-call[text='lassign'] + s + * + s + :not(keyword) + s + :not(keyword) + s + :not(keyword),
tcl.function-call[text='lassign'] + s + * + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword),
tcl.function-call[text='lassign'] + s + * + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword),

tcl.function-call-regexp + s + :not(keyword) + s + word,
tcl.function-call-regexp + s + :not(keyword) + s + :not(keyword) + s + word,
tcl.function-call-regexp + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + word,
tcl.function-call-regexp + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + word,
tcl.function-call-regexp + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) +  s + :not(keyword) + s + word,

tcl.function-call-regsub + s + * + s + * + s + word,
tcl.function-call-regsub + s + property-name + s + * + s + * + s + word,
tcl.function-call-regsub + s + property-name + s + property-name + s + * + s + * + s + word,
tcl.function-call-regsub + s + property-name + s + property-name + s + property-name + s + * + s + * + s + word,
tcl.function-call-regsub + s + property-name + s + property-name + s + property-name + s + property-name + s + * + s + * + s + word,
tcl.function-call-regsub + s + property-name + s + property-name + s + property-name + s + property-name + s + property-name + s + * + s + * + s + word,
tcl.function-call-regsub + s + property-name + s + property-name + s + property-name + s + property-name + s + property-name + s + property-name + s + * + s + * + s + word,
tcl.function-call-regsub + s + property-name + s + property-name + s + property-name + s + property-name + s + property-name + s + property-name + s + property-name + s + * + s + * + s + word,

tcl.command-variable + s + word,
tcl.command-variable + s + word + s + :not(keyword) + s + word,
tcl.command-variable + s + word + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + word,
tcl.command-variable + s + word + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + word,
tcl.command-variable + s + word + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + word,

tcl.command-global + s + word,
tcl.command-global + s + :not(keyword) + s + word,
tcl.command-global + s + :not(keyword) + s + :not(keyword) + s + word,
tcl.command-global + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + word,
tcl.command-global + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + word,

tcl.upvar + s + :not(keyword,numeric) + s + word,
tcl.upvar + s + :not(keyword,numeric) + s + :not(keyword) + s + :not(keyword) + s + word,
tcl.upvar + s + :not(keyword,numeric) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + word,
tcl.upvar + s + :not(keyword,numeric) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + word,
tcl.upvar + s + :not(keyword,numeric) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + word,

tcl.upvar + s + numeric + s + :not(keyword) + s + word,
tcl.upvar + s + numeric + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + word,
tcl.upvar + s + numeric + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + word,
tcl.upvar + s + numeric + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + word,
tcl.upvar + s + numeric + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + word,

tcl.function-call-catch + s + word,
tcl.function-call-catch + s + word + s + word,

tcl.keyword.control.start[text='foreach'] + s + word,
tcl.keyword.control.start[text='foreach'] + s + balanced-braces word,
tcl.function-call[text='rename'] + s + :not(keyword,variable) + s + :not(keyword,variable) {
	color: #7ac54d;
	font-style: italic;
}

tcl.function-call[text='rename'] + s + :not(keyword,variable,punctuation),
tcl.function-call[text='unset'] + s + :not(keyword,variable,punctuation),
tcl.function-call[text='unset'] + s + :not(keyword,variable) + s + :not(keyword,variable,punctuation),
tcl.function-call[text='unset'] + s + :not(keyword,variable) + s + :not(keyword,variable) + s + :not(keyword,variable,punctuation),
tcl.function-call[text='unset'] + s + :not(keyword,variable) + s + :not(keyword,variable) + s + :not(keyword,variable) + s + :not(keyword,variable,punctuation),
tcl.function-call[text='unset'] + s + :not(keyword,variable) + s + :not(keyword,variable) + s + :not(keyword,variable) + s + :not(keyword,variable) + s + :not(keyword,variable,punctuation) {
	color: #e51c1c;
	font-style: italic;
}

tcl.keyword.option.amira {
	font-weight: normal;
}

tcl.function-call[text='expr'] + s + container.balanced-parenthesis keyword-control-additional {
	color: rgb(243, 134, 42);
	font-weight: bold;
}

tcl.format-specifier,
tcl.function-call + s + options,
tcl.function-call + s + options + s + options,
tcl.function-call + s + options + s + options + s + options,
tcl.function-call + s + function-call,
tcl.function-call + s + function-call + s + function-call,
tcl.function-call + s + function-call + s + function-call + s + function-call,
tcl.function-call[text='fileevent'] + s + :not(keyword) + s + options.fileevent,
tcl.function-call[text='dict'] + s + options + s + * + s + dict.options,
tcl.function-call[text='trace'] + s + options + s + command,
tcl.function-call[text='trace'] + s + options + s + * + s + * + s + keyword,
tcl.function-call[text='trace'] + s + options + s + * + s + * + s + balanced-braces > keyword,
tcl.function-call[text='trace'] + s + options + s + * + s + * + s + balanced-brackets > keyword:not(function-call[text='list']) {
	color: rgb(249, 212, 123);
	font-weight: normal;
}

tcl.format-type {
	font-weight:bold;
}
