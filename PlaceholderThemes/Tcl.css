/*
    @theme Tcl Placeholder
    @placeholder language-root.tcl
    @author Bernhard Rosensteiner <brosensteiner@gmail.com>
*/

:not(tcl.comment, tcl.string) {
	spell-check: disabled;
}

tcl.shebang {
	color: #d44950;
	font-weight: bold;
	background-color: rgba(57, 79, 227, 0.3);
}

tcl.global-variables,
tcl.global-procedures {
	font-weight: bold;
}

tcl.variable.substitute {
	color: rgba(163, 214, 132, 0.8);
}

tcl.variable.amira,
tcl.keyword.amira {
	color: #4f76cf;
	font-weight: bold;
}
tcl.keyword.option.amira {
	font-weight: normal;
}

tcl.keyword.command.amira.global.commands.viewer + tcl.keyword.option.amira.viewer,
tcl.keyword.command.amira.global.commands.viewer + tcl.keyword.option.amira.viewer {
	color: #4f76cf;
}

tcl.variable.evaluate {
	color: #82c0e5;
	font-weight: normal;
}

tcl.variable,
tcl.variable.substitute.rest,

tcl.builtinfunc[text='append'] + word,

tcl.builtinfunc[text='scan'] + :not(keyword) + :not(keyword) + :not(keyword),
tcl.builtinfunc[text='scan'] + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword),
tcl.builtinfunc[text='scan'] + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword),
tcl.builtinfunc[text='scan'] + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword),
tcl.builtinfunc[text='scan'] + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword),

tcl.builtinfunc[text='lassign'] + * + :not(keyword),
tcl.builtinfunc[text='lassign'] + * + :not(keyword) + :not(keyword),
tcl.builtinfunc[text='lassign'] + * + :not(keyword) + :not(keyword) + :not(keyword),
tcl.builtinfunc[text='lassign'] + * + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword),
tcl.builtinfunc[text='lassign'] + * + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword),

tcl.builtinfunc-regexp + word,
tcl.builtinfunc-regexp + :not(keyword) + word,
tcl.builtinfunc-regexp + :not(keyword) + :not(keyword) + word,
tcl.builtinfunc-regexp + :not(keyword) + :not(keyword) + :not(keyword) + word,
tcl.builtinfunc-regexp + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + word,
tcl.builtinfunc-regexp + :not(keyword) + :not(keyword) + :not(keyword) +  :not(keyword) + word,

tcl.builtinfunc-regsub + * + * + word,
tcl.builtinfunc-regsub + switches + * + * + word,
tcl.builtinfunc-regsub + switches + switches + * + * + word,
tcl.builtinfunc-regsub + switches + switches + switches + * + * + word,
tcl.builtinfunc-regsub + switches + switches + switches + switches + * + * + word,
tcl.builtinfunc-regsub + switches + switches + switches + switches + switches + * + * + word,
tcl.builtinfunc-regsub + switches + switches + switches + switches + switches + switches + * + * + word,
tcl.builtinfunc-regsub + switches + switches + switches + switches + switches + switches + switches + * + * + word,

tcl.command-variable + word,
tcl.command-variable + word + :not(keyword) + word,
tcl.command-variable + word + :not(keyword) + :not(keyword) + :not(keyword) + word,
tcl.command-variable + word + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + word,
tcl.command-variable + word + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + word,

tcl.command-global + word,
tcl.command-global + :not(keyword) + word,
tcl.command-global + :not(keyword) + :not(keyword) + word,
tcl.command-global + :not(keyword) + :not(keyword) + :not(keyword) + word,
tcl.command-global + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + word,

tcl.upvar + :not(keyword,numeric) + word,
tcl.upvar + :not(keyword,numeric) + :not(keyword) + :not(keyword) + word,
tcl.upvar + :not(keyword,numeric) + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + word,
tcl.upvar + :not(keyword,numeric) + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + word,
tcl.upvar + :not(keyword,numeric) + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + word,

tcl.upvar + numeric + :not(keyword) + word,
tcl.upvar + numeric + :not(keyword) + :not(keyword) + :not(keyword) + word,
tcl.upvar + numeric + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + word,
tcl.upvar + numeric + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + word,
tcl.upvar + numeric + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + word,

tcl.builtinfunc-catch + word,

tcl.keyword.control.start[text='foreach'] + word,
tcl.keyword.control.start[text='foreach'] + open-brace + word,
tcl.keyword.control.start[text='foreach'] + open-brace + word + word,
tcl.keyword.control.start[text='foreach'] + open-brace + word + word + word,
tcl.keyword.control.start[text='foreach'] + open-brace + word + word + word + word,
tcl.keyword.control.start[text='foreach'] + open-brace + word + word + word + word + word  {
	color: #7ac54d;
}

tcl.keyword.variable.rename.oldname,
tcl.builtinfunc[text='unset'] + :not(keyword),
tcl.builtinfunc[text='unset'] + :not(keyword) + :not(keyword),
tcl.builtinfunc[text='unset'] + :not(keyword) + :not(keyword) + :not(keyword),
tcl.builtinfunc[text='unset'] + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword),
tcl.builtinfunc[text='unset'] + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) + :not(keyword) {
	color: #e51c1c;
}

switches, {
	color: rgba(186, 129, 233, 0.38);
}

tcl.keyword.command {
	color: #bb82e9;
}

tcl.builtinfunc + options,
tcl.builtinfunc + options + options,
tcl.builtinfunc + options + options + options,
tcl.builtinfunc[text='fileevent'] + :not(keyword) + options.fileevent,
tcl.builtinfunc[text='trace'] + options + :not(keyword) + options.trace-add-command-ops {
	color: rgba(186, 129, 233, 0.6);
}


tcl.keyword.operator.logical {
	font-weight: bold;
}

tcl.punctuation.open-bracket,
tcl.punctuation.close-bracket,
tcl.keyword.string-format, {
	color: #e82c13;
}

tcl.keyword.character-class,
tcl.open-brace,
tcl.close-brace,
tcl.open-parenthesis,
tcl.close-parenthesis {
	color: #7f7f7f;
}
