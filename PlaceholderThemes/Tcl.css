/*
    @theme Tcl Placeholder
    @placeholder language-root.tcl
    @author Bernhard Rosensteiner <brosensteiner@gmail.com>
    has some Amira hacks - delete Amira selector if needed
*/

**********Amira**********,
amira.variable,
amira.keyword {
	color: #7f9ee6;
}

tcl.var,

tcl.function-call[text='scan'] + s + :not(keyword) + s + :not(keyword) + s + :not(keyword),
tcl.function-call[text='scan'] + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword),
tcl.function-call[text='scan'] + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword),
tcl.function-call[text='scan'] + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword),
tcl.function-call[text='scan'] + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword),

tcl.function-call[text='lassign'] + s + * + s + :not(keyword),
tcl.function-call[text='lassign'] + s + * + s + :not(keyword) + s + :not(keyword),
tcl.function-call[text='lassign'] + s + * + s + :not(keyword) + s + :not(keyword) + s + :not(keyword),
tcl.function-call[text='lassign'] + s + * + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword),
tcl.function-call[text='lassign'] + s + * + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword),

tcl.regex:has-child(function-call[text='regexp']) + s + subst + s + word,
tcl.regex:has-child(function-call[text='regexp']) + s + subst + s + :not(keyword) + s + word,
tcl.regex:has-child(function-call[text='regexp']) + s + subst + s + :not(keyword) + s + :not(keyword) + s + word,
tcl.regex:has-child(function-call[text='regexp']) + s + subst + s + :not(keyword) + s + :not(keyword) +  s + :not(keyword) + s + word,
tcl.regex:has-child(function-call[text='regexp']) + s + subst + s + :not(keyword) + s + :not(keyword) +  s + :not(keyword) + s + :not(keyword) + s + word,
tcl.regex:has-child(function-call[text='regexp']) + s + subst + s + :not(keyword) + s + :not(keyword) +  s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + word,
tcl.regex:has-child(function-call[text='regexp']) + s + subst + s + :not(keyword) + s + :not(keyword) +  s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + word,

tcl.regex:has-child(function-call[text='regsub']) + s + subst + s + subst + s + word,

tcl.function-call[text='regexp'] + s + subst + s + word,
tcl.function-call[text='regexp'] + s + subst + s + :not(keyword) + s + word,
tcl.function-call[text='regexp'] + s + subst + s + :not(keyword) + s + :not(keyword) + s + word,
tcl.function-call[text='regexp'] + s + subst + s + :not(keyword) + s + :not(keyword) +  s + :not(keyword) + s + word,
tcl.function-call[text='regexp'] + s + subst + s + :not(keyword) + s + :not(keyword) +  s + :not(keyword) + s + :not(keyword) + s + word,
tcl.function-call[text='regexp'] + s + subst + s + :not(keyword) + s + :not(keyword) +  s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + word,
tcl.function-call[text='regexp'] + s + subst + s + :not(keyword) + s + :not(keyword) +  s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + :not(keyword) + s + word,

tcl.function-call[text='regsub'] + s + subst + s + subst + s + subst + s + word,

tcl.function-call[text='upvar'] + s + expand + s + word,
tcl.function-call[text='upvar'] + s + expand + s + * + s + expand + s + word,
tcl.function-call[text='upvar'] + s + expand + s + * + s + expand + s + * + s + expand + s + word,
tcl.function-call[text='upvar'] + s + expand + s + * + s + expand + s + * + s + expand + s + * + s + expand + s + word,
tcl.function-call[text='upvar'] + s + expand + s + * + s + expand + s + * + s + expand + s + * + s + expand + s + * + s + expand + s + word,

tcl.function-call[text='upvar'] + s + numeric + s + expand + s + word,
tcl.function-call[text='upvar'] + s + numeric + s + expand + s + * + s + expand + s + word,
tcl.function-call[text='upvar'] + s + numeric + s + expand + s + * + s + expand + s + * + s + expand + s + word,
tcl.function-call[text='upvar'] + s + numeric + s + expand + s + * + s + expand + s + * + s + expand + s + * + s + expand + s + word,
tcl.function-call[text='upvar'] + s + numeric + s + expand + s + * + s + expand + s + * + s + expand + s + * + s + expand + s + * + s + expand + s + word,

tcl.function-call[text='namespace'] + s + options[text='upvar'] + s + expand + s + upd + s + word,
tcl.function-call[text='namespace'] + s + options[text='upvar'] + s + expand + s + upd + s + upd + s + upd + s + word,
tcl.function-call[text='namespace'] + s + options[text='upvar'] + s + expand + s + upd + s + upd + s + upd + s + upd + s + upd + s + word,
tcl.function-call[text='namespace'] + s + options[text='upvar'] + s + expand + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + word,
tcl.function-call[text='namespace'] + s + options[text='upvar'] + s + expand + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + word,
tcl.function-call[text='namespace'] + s + options[text='upvar'] + s + expand + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + word,
tcl.function-call[text='namespace'] + s + options[text='upvar'] + s + expand + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + word,
tcl.function-call[text='namespace'] + s + options[text='upvar'] + s + expand + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + word,
tcl.function-call[text='namespace'] + s + options[text='upvar'] + s + expand + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + word,
tcl.function-call[text='namespace'] + s + options[text='upvar'] + s + expand + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + upd + s + word,

tcl.rename-var-newname {
	color: hsl(96, 19%, 56%);
	font-style: italic;
}

tcl.function-call + options:not(options-oo),
tcl.function-call + s + options:not(options-oo),
tcl.function-call + s + options + s + options:not(options-oo),
tcl.function-call + s + options + s + options + s + options:not(options-oo),
tcl.function-call + s + function-call + s + function-call,
tcl.function-call + s + function-call + s + function-call + s + function-call,
tcl.function-call[text='fileevent'] + s + :not(keyword) + s + options.fileevent,
tcl.function-call[text='dict'] + s + options + s + * + s + options.dict,
tcl.function-call[text='trace'] + s + options + s + command,
tcl.function-call[text='trace'] + s + options + s + * + s + * + s + keyword,
tcl.function-call[text='trace'] + s + options + s + * + s + * + s + balanced.braces > keyword,
tcl.function-call[text='trace'] + s + options + s + * + s + * + s + balanced.brackets > keyword:not(function-call[text='list']),

tcl.function-call[text='chan'] + s + options + s + * + s + numeric + s + options.chan-seek-seek,
tcl.function-call[text='seek'] + s + * + s + numeric + s + options.chan-seek-seek,

tcl.function-call[text='oo'] + s + options[text='define'] + s + * + s + options-oo,
tcl.function-call[text='oo'] + s + options[text='class'] + s + * + s + options-oo,
tcl.function-call[text='oo'] + s + options[text='objdefine'] + s + * + s + options-oo,
tcl.function-call[text='oo'] + s + options[text='object'] + s + * + s + options-oo,
tcl.container.function.oo.oo-object > options-oo.objdefine,
tcl.container.function.oo.oo-class > options-oo.define {
	color: #268bd2;
	font-weight: normal;
}
