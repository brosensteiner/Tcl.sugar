/*
    @theme Tcl Placeholder
    @placeholder Tcl
    @author Bernhard Rosensteiner <brosensteiner@gmail.com>
*/
not(tcl.comment, tcl.string) {
	spell-check: disabled;
}

tcl.shebang {
	color: #d44950;
	font-weight: bold;
	background-color: rgba(57, 79, 227, 0.3);
}

tcl.variable.new {
	color: #7ac54d;
}
tcl.variable.definition.substitute,
tcl.variable.definition.concat {
	color: rgba(163, 214, 132, 0.8);
}

tcl.variable.amira,
tcl.keyword.amira {
	color: #4f76cf;
	font-weight: bold;
}
tcl.keyword.options.amira {
	font-weight: normal;
}
tcl.keyword.options.amira.viewer {
	font-weight: normal;
	color: black;
}
tcl.keyword.command.amira.global.commands.viewer + space + tcl.keyword.options.amira.viewer,
tcl.keyword.command.amira.global.commands.viewer + tcl.keyword.options.amira.viewer {
	color: #4f76cf;
}

tcl.variable.evaluate {
	color: #82c0e5;
	font-weight: normal;
}
tcl.variable.definition,
tcl.variable.definition.substitute.rest,
tcl.keyword.command.builtinfunc.scan + space + :not(keyword) + space + :not(keyword) + space + word,
tcl.keyword.command.builtinfunc.scan + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + word,
tcl.keyword.command.builtinfunc.scan + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + word,
tcl.keyword.command.builtinfunc.scan + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + word,
tcl.keyword.command.builtinfunc.scan + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + word,

tcl.variable.definition.command-variable + space + word,
tcl.variable.definition.command-variable + space + word + space + :not(keyword) + space + word,
tcl.variable.definition.command-variable + space + word + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + word,
tcl.variable.definition.command-variable + space + word + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + word,
tcl.variable.definition.command-variable + space + word + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + word,

tcl.variable.definition.command-global + space + word,
tcl.variable.definition.command-global + space + :not(keyword) + space + word,
tcl.variable.definition.command-global + space + :not(keyword) + space + :not(keyword) + space + word,
tcl.variable.definition.command-global + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + word,
tcl.variable.definition.command-global + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + word,

tcl.variable.definition.upvar + space + numeric + space + :not(keyword) + space + word,
tcl.variable.definition.upvar + space + numeric + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + word,
tcl.variable.definition.upvar + space + numeric + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + word,
tcl.variable.definition.upvar + space + numeric + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + word,
tcl.variable.definition.upvar + space + numeric + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + word,

tcl.variable.definition.upvar + space + :not(keyword) + space + word,
tcl.variable.definition.upvar + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + word,
tcl.variable.definition.upvar + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + word,
tcl.variable.definition.upvar + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + word,
tcl.variable.definition.upvar + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + word,

tcl.variable.definition.unset + space + word,
tcl.variable.definition.unset + space + :not(keyword) + space + word,
tcl.variable.definition.unset + space + :not(keyword) + space + :not(keyword) + space + word,
tcl.variable.definition.unset + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space + word,
tcl.variable.definition.unset + space + :not(keyword) + space + :not(keyword) + space + :not(keyword) + space +  :not(keyword) + space + word,

tcl.keyword.command.builtinfunc.catch + word,
tcl.keyword.command.builtinfunc.catch + space + word {
	color: #7ac54d;
	font-weight: bold;
}

tcl.variable.definition.set,
tcl.variable.definition.command-unset,
tcl.variable.definition.command-variable,
tcl.variable.definition.command-global,
tcl.variable.definition.upvar {
	font-weight: normal;
}

tcl.switch {
	font-weight: normal;
	color: #7f7f7f;
}


tcl.function.arguments {
	background-color: rgba(207, 220, 243, 0.3);
}

tcl.keyword.command {
	color: #bb82e9;
}
tcl.keyword.command.builtinfunc + space + tcl.keyword.options,
tcl.keyword.command.builtinfunc.fileevent + space + :not(keyword) + space + tcl.keyword.options.fileevent {
	color: rgba(186, 129, 233, 0.5);
}
tcl.keyword.operator.logical {
	font-weight: bold;
}

tcl.balanced.brackets {
	background-color: #fafcf0;
}

tcl.punctuation.open-bracket,
tcl.punctuation.close-bracket {
	color: #e82c13;
	background-color: #fafcf0;
}
tcl.keyword.command.semicolon,
tcl.keyword.command.backslash,
tcl.punctuation.function-close-brace,
tcl.punctuation.open-brace,
tcl.punctuation.close-brace,
tcl.punctuation.open-parenthesis,
tcl.punctuation.close-parenthesis {
	color: #7f7f7f;
}
