<?xml version="1.0" encoding="UTF-8"?>
<!--
@description Defines the Amira syntax - a library from VSG´s Amira for Tcl
@author 	 Bernhard Rosensteiner <brosensteiner@gmail.com>
@copyright 	 The MIT License

Copyright (c) 2012 Bernhard Rosensteiner

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
-->
<!--VSG´s Amira can be scripted with Tcl, so here are most of the built in Amira commands (Amira 5.2.4 has built in Tcl 8.4).
Tcl gets precedence for syntax highlighting, so Amira commands have to live with a "(?&lt;=(\w|\])\s)" regex when necessary in front of them (actually they are methods not commands). This means only one space between the Amira command and the preceding word is allowed to match the Amira command. This is neccesary, because Amira and Tcl share sometimes the same commands/keywords and there is no way to distinguish them otherwise.
-->
<syntax name="language-root.amira">

    <zones>
    
		<zone name="amira.sciptobject.comment.shebang">
    	    <expression>^#\s(Amira-Script-Object V3\.0|Amira Script)</expression>
    	</zone>
    	
    	<zone name="amira.keyword.global.variables">
    		<expression>(AMIRA_ROOT|AMIRA_LOCAL|SCRIPTFILE|SCRIPTDIR|hideNewModules|hxneuroneditorplugins|SpaceMouseRotationModeScale|ShiftButton|SpaceMouseFlyModeScale|AltButton|mod|radiossForceTightness|HxLatticeFactory_prefDiskType|hxvisageviewertools|Button1|Button2|Button3|TMPDIR|PerfusionCTMTTDataWindow|PerfusionCTCBFDataWindow|this|amira_version|hxalign_autoalignmethod_plugins|voltex_prio|PRIMARY|VRButton0|VRButton1|VRButton2|VRButton3|PerfusionCTCBVDataWindow|VRButton4|radiossUseInputNodesAsInitial|AMIRA_DEMOS|VRButton5|VRButton6|AMIRA_NETWORKDRIVE_DIR|VRButton7|VRButton8|auto_oldpath|ControlButton|VRButton9|radiossLoadMultipleFilesAsTimeSeries|radiossCacheInitialFile|redrawInhibit)\b</expression>
    	</zone> 	
    
    	<zone name="amira.keyword.option.workArea">
    		<expression>(?&lt;=workArea\s)(setProgressInfo|setProgressValue|startWorking|stopWorking|wasInterrupted)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.option.theMain">
    		<expression>(?&lt;=theMain\s)(snapshot|setViewerTogglesOnIcons|ignoreShow)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.option.theMsg">
    		<expression>(?&lt;=theMsg\s)(error|warning|question|overwrite)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.option.app">
    		<expression>(?&lt;=app\s)(version|uname|arch|hostid|listen|close|port|send|opengl|cluster)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.option.window">
    		<expression>(?&lt;=theMain\s|theMsg\s|viewer\s|viewer\s0\s)(getFrameGeometry|getGeometry|getPosition|getRelativeGeometry|getSize|hide|setCaption|setFrameGeometry|setGeometry|setPosition|setRelativeGeometry|setSize|show|showMinimized|showMaximized)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.global.commands.window">
    	    <expression>\b(theMain|theMsg)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.global.commands.viewer">
    	    <expression>\b(viewer(\s\d*)?)</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.global.commands.other">
    	    <expression>\b(workArea|app)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.global-procedures">
    		<expression>\b(_(?:(?:mbr_DisplayLogos_(?:constructor|getScreen|setScreen|compute|destructor)|HXTIME_CreateTransformDaVinci)|_(?:isEdition|checkMultiChannelLDM|isProduct|checkLDM))|unknown|auto_import|auto_execok|exists|printSelection|remove_tmpio|alignProteinTrajectory|mergeMolecules|poolCleaner|newMolFromAminoAcidCode1|ls|printMutations|newMolFromAminoAcidCode3|auto_load_index|addBondTypeAttributeToTrajBundle|showSurface|newMolFromSmiles|setSelectionLevel|auto_qualify|sel|showAll|showHBondsLevel|runMolTests|BlackOnWhite\.plotconfig|computeHIVAsymmetries|useSet|newMolFromPDB|printMutationsosBundle|alignProteinBundle|forEachTrajectoryInBundle|hideAll|alignProtein|doForAllMolecules|restrictBundleToLongestChains|showHBonds|printSelectionByAtoms|auto_load|onPWKeyF4|showBrowser|onKeyF10|onKeyF12|printSelectionByLevel|tclLog|copyFilter|getBoundingBox|mergeTrajectories|createLogos|addBondTypeAttributeToMolecule|saveBundleAsMMFFPQR|onKeyF5|allSelected|desel|printSelectionByResidues|newMolFromSelection|mergeMoleculesToTrajBundle|addSet|showSticks|printAllSolvationEnergy|messageBox|case|amiramesh|html|theAppSkin|tViewInfo|system|shader|writePresetObjects|echoLog|Compute|dataClass|removeTimeout|subApplication|macroButton|thePrefDialog|theDemoDirector|thePresetMgr|user|Colormaps|mainWindow|rename\.orig|editor|clear|preset|processEvents|Display|Object-Pool|wait|Settings|sleepProcessEvents|module|host|Animation-Demo-Scripts|Data|job|interfaceFactory|AmiraVR|testClass|DisplayLogos|thread_source|dataFile|printf|tclwrapper|pkg_compareExtension)\b</expression>
    	</zone>
    	
        <!--snapshot could interfere with "theMain snapshot", so amira.keyword.options.viewer is here the lower syntax zone and should not be changed-->
        <zone name="amira.keyword.option.viewer">
        	<expression>(?&lt;=(\w|\])\s)(snapshot|setPosition|getPosition|setSize|getSize|setCamera|getCamera|setCameraPosition|getCameraPosition|setCameraOrientation|getCameraOrientation|setCameraFocalDistance|getCameraFocalDistance|setCameraHeightAngle|getCameraHeightAngle|setCameraHeight|getCameraHeight|setCameraType|getCameraType|setTransparencyType|getTransparencyType|setSortedLayersNumPasses|getSortedLayersNumPasses|setBackgroundColor|getBackgroundColor|setBackgroundColor2|getBackgroundColor2|setBackgroundMode|getBackgroundMode|setBackgroundImage|getBackgroundImage|setAutoRedraw|isAutoRedraw|transformScreenToWorld|redraw|rotate|setDecoration|saveScene|viewAll|view|show|hide|fogRange|setVideoFormat|setVideoFrame)\b</expression>
        	<capture number="2" name="amira.keyword.option.viewer.argument"/>
        </zone>
    	        	        	
    	<zone name="amira.keyword.command.port.scriptobject">
    	    <expression>\bnew(?:Port(?:Button(?:List|Menu)|DoIt|Filename|Float(?:Slider|TextN)|MultiMenu|Info|Int(?:Slider|TextN)|RadioBox|Separator|T(?:ime|oggleList|ext(?:Edit)?|abBar)|3DPointList|Generic|C(?:o(?:nnection|lor(?:map|List))|hannelConfig)|DrawStyle|FontSelection|MultiChannel|SharedColormap)|deletePort|get(?:(?:Menu)?Sensitivity|Num|Var)|hasVar|testBreak|set(?:Var(?:Serialize)?|Num|ValueString|MenuSensitivity|Sensitivity))\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.surface-editor">
    	    <expression>(?&lt;=(\w|\])\s)(bisect|checkIntersections|checkOrientation|displayLeaf|displayNeighbours|first|hideTriangles|next|previous|checkHoles|fillHoles|fillAllHoles)\b</expression>
    	</zone>
    	<zone name="amira.keyword.command.simplify-editor">
    	    <expression>(?&lt;=(\w|\])\s)(debug|getFactError|removeCoplanarTriangles|setEdgeLengthWeight|setFactError|setIntersectionTestStrategy|setRadiusRatio|simplifyAction|simplifyOptions|simplifyParameters)\b</expression>
    	</zone>
    	<zone name="amira.keyword.command.crop-editor">
    	    <expression>(?&lt;=(\w|\])\s)(attach|autoCrop|detach|setMaxX|setMaxY|setMaxZ|setMinX|setMinY|setMinZ|setThreshold)\b</expression>
    	</zone>
    	<zone name="amira.keyword.command.segmentation-editor">
    	    <expression>(?&lt;=(\w|\])\s)(add|deleteMaterial|fillAllSlices|fillSelection3D|getCrossHairLocationIndex|getToolDataWindow|growSelection3D|growSelectionAll2D|invertSelection|isVoxelSelected|newMaterial|redo|removeIslands|replace|selectMaterial|selectMaterial2|setCrossHairLocationIndex|setMaxAlpha|setSlice|setTool|setToolDataWindow|setVolrenLevel|shrinkSelection3D|shrinkSelectionAll2D|smooth|smoothAll|smoothSelectionAllSlices|subtract|subtractMaterial2|threshold|toggleVoxel|undo)\b</expression>
    	</zone>
    	<zone name="amira.keyword.command.transform-editor">
    	    <expression>(?&lt;=(\w|\])\s)(resetAll|resetRotation|resetScale|resetTranslation|transformEditorAction|transformEditorManip|transformEditorReset)\b</expression>
    	</zone>
    	<zone name="amira.keyword.command.filter-editor">
    	    <expression>(?&lt;=(\w|\])\s)(filter|kernel|setNumProcs|sigma)\b</expression>
    	</zone>
    	<zone name="amira.keyword.command.gird-editor">
    	    <expression>(?&lt;=(\w|\])\s)(info)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.remeshsurface-module">
    	    <expression>(?&lt;=(\w|\])\s)(bisectEdge|curvDebug|extractDensityField|getTriangleError|op1|pumpContours|refineBadRegions|refineByEdgeLength|relocatePoint|setVerbosity)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.lineprobe-module">
    	    <expression>(?&lt;=(\w|\])\s)(appendPoint|getInterpol|getLength|getOrder|getSamplePoints|getSampledValues|insertPoint|makeLineSet|setImmediate|setInterpol|setOrder|setOrientation|setOrtho|showPlot)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.tetragen-module">
    	    <expression>(?&lt;=(\w|\])\s)(savePartialGrid|setBatch|setMaxDiamRatio|setMaxNumTetras|setMeshSize|setNumNextVert|setStatusChecked|skipPostProc)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.gridvolume-module">
    	    <expression>(?&lt;=(\w|\])\s)(createGridFromSelection|getNSelectedTetra|getNumConnectedRegions|getSelectAllNew|getSelectedTetra|selectBoundaryTets|selectConnectedRegion|selectTetra|setClickToggles|setSelectAllNew|unselectTetra)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.triangledistortion-module">
    	    <expression>(?&lt;=(\w|\])\s)(getVal)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.interface-component-port">
    	    <expression>(?&lt;=(\w|\])\s)(getValue|setValue(s)?|help|isNew|getState|setState|getLabel|setLabel|getLabelWidth|setLabelWidth|align|getPin|setPin|touch|untouch|(?&lt;!info )object|send|show|hide|isVisible|reposition|isOfType|getTypeId|connect|getNumMenus)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.interface-component-connectionport">
    	    <expression>(?&lt;=(\w|\])\s)(source|connect|connectTo|align|getValidTypes|sourceHasInterface|disconnect|setTightness|isTight|setVisibility|isVisible|allowEditing|isEditable|validSource)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.interface-component-genericport">
    	    <expression>(?&lt;=(\w|\])\s)(getColor|isItemNew|deleteItem|insertIntText|insertFloatText|insertCheckBox|insertRadioGroup|insertComboBox|insertPushButton|insertColorButton|insertLabel)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.general-amira-object">
    	    <expression>(?&lt;=(\w|\])\s)(hasInterface|duplicate|showIcon|hideIcon|iconVisible|select|deselect|setLabel|fire|compute|allPorts|connectionPorts|downStreamConnections|setIconPosition|getIconPosition|clipGeom|unclipGeom|setPickable|destroy|getTypeId|help|getLabel|setViewerMask)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.arbitary-cut-amira-object">
    	    <expression>(?&lt;=(\w|\])\s)(frame|setFrameColor|setFrameWidth|getPlane|setPlane|setMinPlanePoint|unsetMinPlanePoint|setMaxPlanePoint|unsetMaxPlanePoint|setAutoClippingPlane|connectPlane|disconnectPlane|createImage|setNumSubPixels|writeTexture|channels|contrastLimit|frameSettings|getNormal|getOrigin|getuVec|getvVec|invertClippingPlane|isAutoClippingPlane|isClippingPlaneInverted|mapping|normal|origin|setAlpha|setLighting|setPolygonOffsetEnabled|sliceNumber|sliceOrientation|transparency|animate|getMaxPlanePoint|getMinPlanePoint|getScale|hasFrame|overlayType|sampling|saveTexture|setAlphaThreshold|setResolution|setTranslateRange)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.amira-spatial-data-object">
    	    <expression>(?&lt;=(\w|\])\s)(getBoundingBox|getTransform|setTransform|getInverseTransform|getTranslation|setTranslation|getRotation|setRotation|getScaleFactor|setScaleFactor|translate|rotate|scale|multTransform|hasUndefinedValue|getUndefinedValue|setUndefinedValue|hasDataWindow|setDataWindow|removeDataWindow|getRange|touchMinMax|jitter|getNumPoints|getPoint|setPoint)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.field3">
    	    <expression>(?&lt;=(\w|\])\s)(nDataVar|evalprimType|getDims|coordType|swapByteOrder|clearSlice|exchangeSlices|crop|flip|swapDims|setBoundingBox)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.landmarks">
    	    <expression>(?&lt;=(\w|\])\s)(appendLandmark|computeLinearTransform|computeRigidTransform|diff|getDistance|getNumSets|getOrientation|removeLandmark|setNumSets|setRigidTransform|swapSets)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.measurement">
    	    <expression>(?&lt;=(\w|\])\s)(addBox|addCircle|clearElems|getNumTools|tool0|init|getValue|getPoints|getName|getNumberTools|exportSpreadSheet|dump|point|format|color|pointSize|name|addLine (2D|3D)|addAngle (2D|3D)|addAnnotation (2D|3D))\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.refinetetras">
    	    <expression>(?&lt;=(\w|\])\s)(getCentroid|role)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.surface">
    	    <expression>(?&lt;=(\w|\])\s)(recompute|fixOrientation|invertOrientation|makeOnePatch|cleanup|getArea|getVolume|setColor|setTransparency|add\s+-point|add\s+-triangle|merge|refine|getPatchArea|assignInsideMaterial|assignOutsideMaterial|checkClosedness|clearLOD|computeNormalsPerTriangle|computeNormalsPerVertex|computeNormalsPerVertexIndexed|copyMaterials|createAllEdges|createContours|findBranchingPoints|findContours|fixHangingNodes|getBoundaryId|getGenus|getMaterials|getMaxEdgeLength|getMeanEdgeLength|getMinEdgeLength|getNeighsPerPoint|getNumPatches|getNumTriangles|getTopology|getTransparency|getTriIdx|getTriangleArea|mergeAll|mergeDuplicateGridVertices|mergeVertexSet|recomputeNoRenumberPoints|removeDegenerateTriangles|removeDuplicateTriangles|removeNormals|removeSmallPatches|removeUnusedPoints|setBoundaryId|setMaterialName)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.surface-view">
    	    <expression>(?&lt;=(\w|\])\s)(getBox|getCreaseAngle|getDrawSelectionMode|getSelectedTriangles|getVisibleTriangles|hidePatch|highlightTriangles|isHighlighted|isSelected|loadTexture|makePatch|options|selectFrontFace|selectTriangles|selectVisibleOnly|setBox|setCreaseAngle|setFontSize|setMaxColormapRange|showBoundaryId|showPatch|tooBigSurfaceWarning|transFactor|twoFace|useDisplayLists)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.grid">
    	    <expression>(?&lt;=(\w|\])\s)(hasDuplicatedNodes|removeDuplicatedPoints|removeTetra|cleanUp|applyTransformRounded|check|computeHints|createEdges|getCenter|getNumIslands|getNumTetrahedra|globalRefine|isExtendedGrid|movePointRel|rebuildOctree|removeDuplicatePoints|scaleCoords|sortTetrahedra|translateCoords)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.cluster">
    	    <expression>(?&lt;=(\w|\])\s)(computeBounds|computeConnectivity|addPoint|removePoint|resetIds|setId|getId|getIndex|clear|setNumDataColumns|getNumDataColumns|setDataValue|getDataValue|setDataColumnName|getDataColumnName|setNumLabelColumns|getNumLabelColumns|setLabelValue|getLabelValue|setLabelColumnName|getLabelColumnName)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.data">
    	    <expression>(?&lt;=(\w|\])\s)(touch|save|parameters|setDefaultFileFormat|setEditor|getEditor)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.global.other">
    	    <expression>\b(addTimeout|all|aminfo|clear|create|dso|addPath|echo|help|httpd|limit(?!\?)|load|mem|quit|remove|rename|sleep|system|saveNetwork|saveNetworkAs)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.interface-component-buttonport">
    	    <expression>\b(wasShiftDown|wasCtrlDown|wasAltDown|setShiftDown|setCtrlDown|setAltDown|setCmd|getCmd|getNumButtons|setNumButtons|enableSnapToggle|snap|isSnapped|wasHit)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.interface-component-buttonmenu">
    	    <expression>\b(setNumOptEntries|getNumOptEntries|setOptValue|setOptValueString|getOptValue|setOptLabel|setOptLabels|getOptLabel|setOptSensitivity|getOptSensitivity)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.interface-component-slider">
    	    <expression>\b(getFormat|getIncrement|getMaxValue|getMinValue|getNumColumns|getSliderWidth|getTracking|hasButtons|hasSubRangeButtons|isDiscrete|setButtons|setDiscrete|setFormat|setIncrement|setMinMax|setNumColumns|setSliderWidth|setSubMinMax|setSubRangeButtons|setTracking)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.interface-component-toggle">
    	    <expression>\b(getIsTristate|getMask|isToggleVisible|setIsTristate|setMask|setToggleVisible|setValueAndMask)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.interface-component-savefile">
    	    <expression>\b(getFileType|getFilename|getMode|registerFileType|setFilename|setFilenames|setMode)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.data-classes">
    	    <expression>\bHx(?:Data|SpreadSheet|Colormap|Colormap256|CameraPath|KeyframeCameraPath|SpatialData|IvData|Field3|ScalarField3|RegScalarField3|UniformScalarField3|UniformLabelField3|StackedScalarField3|StackedLabelField3|AnnaScalarField3|TetraScalarField3|HexaScalarField3|VectorField3|RegVectorField3|UniformVectorField3|EdgeElemVectorField3|AnnaVectorField3|TetraVectorField3|HexaVectorField3|ComplexScalarField3|RegComplexScalarField3|UniformComplexScalarField3|TetraComplexScalarField3|HexaComplexScalarField3|ComplexVectorField3|RegComplexVectorField3|UniformComplexVectorField3|EdgeElemComplexVectorField3|TetraComplexVectorField3|HexaComplexVectorField3|ColorField3|RegColorField3|UniformColorField3|RegField3|TetraField3|HexaField3|VertexSet|Surface|TetraGrid|HexaGrid|LineSet|LandmarkSet|Cluster|SurfaceField|SurfaceScalarField|SurfaceVectorField|SurfaceComplexScalarField|SurfaceComplexVectorField)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.additional-data-classes">
    	    <expression>\bHx(?:GenerateTensorData|Arithmetic|BSpline|ColormapSC|ConvertToDiskData|GPUShader|LinearVectorField3|MagDipol|Mosaic|MovieData|SpatialGraph|SurfacePathSet|Time|ScriptObject|IvDisplay|Annotation|Sound|SQLite|Tridelity|2DMesh|CreateSphere|FakeModule|DynamicFileSeriesCtrl|GeometryToSurface|LDAExpertSettings|MolTrajectoryBundle|PSFGen|ParametricSurface|StereoTestPattern|VoxelSurface|Calculus|CircularCameraPath|ArbitraryCut|MultiChannelField3|MultiChannelField|Scale|GMC|Volren|Voltex|AffineRegistration|AlignSlices|AnonymizeImageStack|ApplyTransform|AverageBrain|CorrectBlockFace|Canny2D|CastField|CastLattice|ChannelWorks|ColorCombine|CompareLatticeData|ComputeTensor|ComputeTensorOutOfCore|DicomSend|FieldAsLattice|FilterBySpreadsheet|Gradient|FrameInterpolator|LabelVoxel|LatToHex|Merge|NormalizeImage|Resample|SegmentBrain|Shear|SplitLattice|VolumeEdit|StandardView|SelectRoi|ProjectionView|OrthoSlice|ObliqueSlice|Axis|Isosurface|Isolines|HeightField|FilteredObliqueSlice|CurvedSlice|CornerCut|CityPlot|BumpSlice|AnnotatedIsolines|ObjectTransformAnimation|BeadExtract|Convolution|CorrectZDrop|DataPreprocess|Deconvolution|FFT|ImageFilters|ConnectedComponentAnalysis|CorrelationPlot|LocalThreshold|SeparateMorpho|WatershedSegmentation|Histogram|LineProbe|LineSetProbe|PointProbe|ShapeAnalysis|SplineProbe|ExtAutoSkeleton|TEASAR|DOThinner2|TissueStatistics|ParameterEditor|ParamBundle|ParamBase|RemeshSurface|ViewBaseExtract)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.port.type">
    	    <expression>\bHxPort(?:Button(?:List|Menu)|ColorList|Float(?:slider|TextN)|Generic|IntSlider|Multi(?:Menu|Options)|Ra(?:dioBox|ngeSlider)|T(?:abBar|ext(?:Edit)?|oggleList)|3DPointList)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.parameters">
    	    <expression>(?&lt;=(\w|\])\s)(bundle|flags|getFlag|getName|hasBundle|hasParameter|index|isBundle|list|nBundles|newBundle|setFlag|setName|size)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.viewbase">
    	    <expression>(?&lt;=(\w|\])\s)(createSurface|setAlphaMode|setNormalBinding|setPointSize|setPolygonOffsetMode|setOutlineColor|setLineWidth|setHighlightColor|setEmissiveColor|setSpecularColor|setShininess|showBox|hideBox)\b</expression>
    	</zone>
    	
    	<zone name="amira.keyword.command.additional-commands">
    	    <expression>(?&lt;=(\w|\])\s)(master|addColumn|getNumCols|setColName|getNumRows|setDecimalPoint|setNumFormat|setNumRows|autoFormat|print|allInterfaceTypeIds|allInterfaces|applyTransform|applyTransformBBox|checkBorderTouch|clearVisibleFlag|collapse|compareTransforms|createDocFile|createPortSnaps|createWeights|deleteWeights|eval|expand|extract|getControllingData|getHelpHint|getInterface|getMaterialName|getNoRenameFlag|getPackage|getScreen|getSurfaceArea|getTouchTime|getTransformRounded|getVarNames|getViewerMask|getVoxelSize|gmcLabels|gmcWeights|hasMaterial|interpolTransform|isModified|latticeType|makeColormap|primType|primary|relabel|removeEmptyMaterials|removeMaterial|resize|setControllingData|setInvisible|setModified|setNoRemove|setNoRemoveAll|setNoRename|setNoSave|setRequiresPolygonOffset|setScale|setScreen|setShadowStyle|setTransformRounded|setUnit|sharedColormap|unsetVar|action|DoIt|doIt|call|exec|getResult|isFirstCall|script|setPickCallback|setResult)\b</expression>
    	</zone>
		
    </zones>
 
</syntax>